// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelegramBot.Models;

#nullable disable

namespace TelegramBot.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TelegramBot.Models.Medal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImagePath = "C:\\Users\\tefgo\\source\\repos\\FuhrerMonaruBot\\FuhrerMonaruBot\\images\\braz.jpg",
                            Name = "Bronze"
                        },
                        new
                        {
                            Id = 2,
                            ImagePath = "C:\\Users\\tefgo\\source\\repos\\FuhrerMonaruBot\\FuhrerMonaruBot\\images\\srebro.jpg",
                            Name = "Silver"
                        },
                        new
                        {
                            Id = 3,
                            ImagePath = "C:\\Users\\tefgo\\source\\repos\\FuhrerMonaruBot\\FuhrerMonaruBot\\images\\zloto.jpg",
                            Name = "Gold"
                        },
                        new
                        {
                            Id = 4,
                            ImagePath = "C:\\Users\\tefgo\\source\\repos\\FuhrerMonaruBot\\FuhrerMonaruBot\\images\\karny.jpg",
                            Name = "Warn"
                        });
                });

            modelBuilder.Entity("TelegramBot.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Warn")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TelegramBot.Models.UserMedal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MedalId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MedalId");

                    b.HasIndex("UserId");

                    b.ToTable("UserMedals");
                });

            modelBuilder.Entity("TelegramBot.Models.UserMedal", b =>
                {
                    b.HasOne("TelegramBot.Models.Medal", "Medal")
                        .WithMany("UserMedals")
                        .HasForeignKey("MedalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelegramBot.Models.User", "User")
                        .WithMany("UserMedals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelegramBot.Models.Medal", b =>
                {
                    b.Navigation("UserMedals");
                });

            modelBuilder.Entity("TelegramBot.Models.User", b =>
                {
                    b.Navigation("UserMedals");
                });
#pragma warning restore 612, 618
        }
    }
}
